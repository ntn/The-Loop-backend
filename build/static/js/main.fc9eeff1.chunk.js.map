{"version":3,"sources":["services/twitter.js","reducers/trendingTagsReducer.js","store.js","components/TrendingTagView.js","components/TrendingList.js","components/Header.js","components/TweetView.js","components/TweetList.js","components/RealtimeTweetList.js","App.js","index.js"],"names":["axios","get","then","response","data","topic","trendingTagsReducer","state","action","type","initialTrendingTags","concat","reducer","combineReducers","trendingTags","store","createStore","composeWithDevTools","applyMiddleware","thunk","useStyles","makeStyles","root","minWidth","maxWidth","title","fontSize","pos","marginBottom","TrendingTagView","name","tweetVolume","classes","key","Container","Card","className","variant","CardContent","Typography","color","gutterBottom","component","CardActions","Button","size","to","substr","style","textDecoration","connectedTrendingList","connect","props","display","flexWrap","alignItems","justifyContent","map","trendingTag","replace","tweet_volume","flexGrow","textAlign","Header","linkStyle","CssBaseline","AppBar","position","Toolbar","Badge","theme","media","height","paddingTop","avatar","backgroundColor","red","TweetView","id","profilePic","createdDate","text","CardHeader","Avatar","alt","src","target","rel","href","IconButton","aria-label","subheader","TweetList","useState","tweets","setTweets","useEffect","twitterService","tagName","retrievedTweets","tweet","id_str","user","screen_name","profile_image_url","created_at","RealtimeTweetList","initialized","setInitialized","socketIOClient","on","newTweets","push","newTweet","filter","v","i","a","findIndex","t","App","dispatch","useDispatch","match","useRouteMatch","params","searchQuery","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc9eeff1.chunk.js","sourcesContent":["import axios from 'axios';\n// const baseUrl = 'http://localhost:3003/twitter';\nconst baseUrl = '/twitter';\n\nconst getAllTrendingTags = () => {\n  const request = axios.get(`${baseUrl}/trending`);\n  return request.then(response => response.data);\n};\n\nconst getTweetsByTag = (topic) => {\n  const request = axios.get(`${baseUrl}/tweets/${topic}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAllTrendingTags, getTweetsByTag };","import twitterService from '../services/twitter';\n\nconst trendingTagsReducer = (state = [], action) => {\n  switch(action.type) {\n  case 'INIT_TRENDING_TAGS':\n    // eslint-disable-next-line no-case-declarations\n    const initialTrendingTags = action.data.concat();\n    return initialTrendingTags;\n  default:\n    return state;\n  }\n};\n\nexport const initializeTrendingTags = () => {\n  return async dispatch => {\n    const initialTrendingTags = await twitterService.getAllTrendingTags();\n    dispatch({\n      type: 'INIT_TRENDING_TAGS',\n      data: initialTrendingTags\n    });\n  };\n};\n\nexport default trendingTagsReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport trendingTagsReducer from './reducers/trendingTagsReducer';\n\nconst reducer = combineReducers({\n  trendingTags: trendingTagsReducer\n});\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {\n  Link,\n} from 'react-router-dom';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    maxWidth: 300\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst TrendingTagView = ({ name, tweetVolume }) => {\n  const classes = useStyles();\n  const linkStyle = {\n    color: 'inherit',\n    textDecoration: 'inherit'\n  };\n\n  return (\n    <div key={name}>\n      <Container maxWidth=\"sm\">\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Trending\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n            has {tweetVolume} tweets\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"large\">\n              <Link to={`/tweets/${name.substr(1)}`} style={linkStyle}>See Tweets</Link>\n            </Button>\n          </CardActions>\n        </Card>\n        <br></br>\n      </Container>\n    </div>\n  );\n};\n\nexport default TrendingTagView;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TrendingTagView from './TrendingTagView';\n\nconst TrendingList = props => {\n  const trendingTags = () => {\n    const sanitizedTrendingTags = props.trendingTags.map((trendingTag) => {\n      const name = trendingTag.name[0] === '#'\n        ? trendingTag.name\n        :`#${trendingTag.name.replace(/\\s/g, '')}`;\n      return { ...trendingTag, name };\n    });\n    return sanitizedTrendingTags;\n  };\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center' }}>\n      {trendingTags().map(trendingTag =>\n        <TrendingTagView key={trendingTag.name} name={trendingTag.name} tweetVolume={trendingTag.tweet_volume} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    trendingTags: state.trendingTags\n  };\n};\nconst connectedTrendingList = connect(mapStateToProps, null)(TrendingList);\n\nexport default connectedTrendingList;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport {\n  Link\n} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n}));\n\n\nconst Header = ({ title }) => {\n  const classes = useStyles();\n  const linkStyle = {\n    color: 'inherit',\n    textDecoration: 'inherit'\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Button color=\"inherit\">\n            <Link to=\"/\" style={linkStyle}>Home</Link>\n          </Button>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n          <Badge color=\"secondary\" variant=\"dot\">\n            <Button color=\"inherit\">\n              <Link to=\"/realtime/coronavirus\" style={linkStyle}>COVID-19 Tweets</Link>\n            </Button>\n          </Badge>\n        </Toolbar>\n      </AppBar>\n      <br></br>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst TweetView = ({ id, name, profilePic, createdDate, text }) => {\n  const classes = useStyles();\n\n  return (\n    <div key={name}>\n      <Container maxWidth=\"sm\">\n        <Card className={classes.root}>\n          <CardHeader\n            avatar={\n              <Avatar alt={name} src={profilePic} className={classes.avatar}>\n                {name}\n              </Avatar>\n            }\n            action={\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://twitter.com/${name}/status/${id}`}>\n                <IconButton aria-label=\"settings\">\n                </IconButton>\n              </a>\n            }\n            title={name}\n            subheader={createdDate}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {text}\n            </Typography>\n          </CardContent>\n        </Card>\n        <br></br>\n      </Container>\n    </div>\n  );\n};\n\nexport default TweetView;\n","import React, { useEffect, useState } from 'react';\nimport TweetView from './TweetView';\nimport twitterService from '../services/twitter';\n\nconst TweetList = props => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    twitterService.getTweetsByTag(props.tagName).then((retrievedTweets) => {\n      setTweets(retrievedTweets);\n    });\n  }, [props.tagName]);\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center' }}>\n      {tweets.map(tweet =>\n        <TweetView\n          key={tweet.id}\n          id={tweet.id_str}\n          name={tweet.user.screen_name}\n          profilePic={tweet.user.profile_image_url}\n          createdDate={tweet.created_at}\n          text={tweet.text} />\n      )}\n    </div>\n  );\n};\n\nexport default TweetList;\n","import React, { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport TweetView from './TweetView';\n// const ENDPOINT = 'http://localhost:3003';\n\nconst RealtimeTweetList = props => {\n  const [tweets, setTweets] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    // const socket = socketIOClient(ENDPOINT);\n    const socket = socketIOClient();\n    socket.on('initialTweets', data => {\n      const newTweets = tweets.concat(data);\n      setTweets(newTweets);\n      setInitialized(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (initialized) {\n      // const socket = socketIOClient(ENDPOINT);\n      const socket = socketIOClient();\n      socket.on('newTweet', data => {\n        tweets.push(data.newTweet);\n        setTweets([...tweets]);\n      });\n    }\n  }, [initialized]);\n\n  const filteredTweets = () => {\n    return tweets.filter((v,i,a) => a.findIndex(t => (t.id === v.id)) ===i);\n  };\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center' }}>\n      {filteredTweets().map(tweet =>\n        <TweetView\n          key={tweet.id}\n          id={tweet.id}\n          name={tweet.user.screen_name}\n          profilePic={tweet.user.profile_image_url}\n          createdDate={tweet.created_at}\n          text={tweet.text} />\n      )}\n    </div>\n  );\n};\n\nexport default RealtimeTweetList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { initializeTrendingTags } from './reducers/trendingTagsReducer';\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from 'react-router-dom';\nimport TrendingList from './components/TrendingList';\nimport Header from './components/Header';\nimport TweetList from './components/TweetList';\nimport RealtimeTweetList from './components/RealtimeTweetList';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initializeTrendingTags());\n  }, [dispatch]);\n\n  const match = useRouteMatch('/tweets/:searchQuery');\n  const tagName = match\n    ? match.params.searchQuery\n    : null;\n\n  return (\n    <>\n      <Header title={'The Loop'} />\n      <Switch>\n        <Route path=\"/realtime/coronavirus\">\n          <RealtimeTweetList />\n        </Route>\n        <Route path=\"/tweets/:searchQuery\">\n          <TweetList tagName={tagName} />\n        </Route>\n        <Route path=\"/\">\n          <TrendingList />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}